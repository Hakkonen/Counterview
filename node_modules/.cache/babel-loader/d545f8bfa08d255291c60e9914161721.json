{"ast":null,"code":"var _jsxFileName = \"/Users/synesis/Documents/Developer/Counterview/src/components/CreateCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Fetch from \"./Fetch\"; // Takes in image src, asset name and \n// quantity to return an image card for gallery view\n// TODO: Create alternative display for MP4\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CreateCard(props) {\n  _s();\n\n  const [toggle, setToggle] = useState({\n    info: false\n  });\n  const [info, setInfo] = useState({\n    supply: 0,\n    est_value: \"USD$0\",\n    dispenser_price: \"0 BTC\"\n  });\n  const [callInfo, setCallInfo] = useState(false); // Creates class names for card\n\n  const className = `image-card ${props.series}`; // Sets state for info toggle\n\n  function changeToggle() {\n    setToggle(prevState => ({\n      info: !prevState.info\n    }));\n  } // Runs on call info so not to continuously call\n\n\n  useEffect(() => {\n    // Updates asset and market info on toggle\n    const updateData = async () => {\n      // Update info\n      const asset_info = await Fetch(\"asset\", props.asset);\n      let val_usd = \"Priceless\";\n\n      if (asset_info[\"estimated_value\"][\"usd\"] > 0.0) {\n        val_usd = parseFloat(asset_info[\"estimated_value\"][\"usd\"]).toFixed(4);\n      } // Update dispenser\n\n\n      const asset_disp = await Fetch(\"dispensers\", props.asset);\n      let dispenser_btc = \"\";\n\n      if (asset_disp[\"data\"].length > 0) {\n        dispenser_btc = parseFloat(asset_disp[\"data\"][0][\"satoshirate\"]).toFixed(4).toString() + \"BTC\";\n      } else {\n        dispenser_btc = \"Priceless\";\n      }\n\n      setInfo(prevState => ({\n        supply: asset_info[\"supply\"],\n        est_value: val_usd.toString(),\n        dispenser_price: dispenser_btc.toString()\n      }));\n    };\n\n    updateData();\n  }, [callInfo]);\n  useState(() => {\n    console.log(info);\n  }, [info]); // Info component\n\n  const cardInfo = /*#__PURE__*/_jsxDEV(\"span\", {\n    class: \"card-info\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      class: \"fill\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"INFO\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: `https://xchain.io/asset/${props.asset}`,\n        target: \"_blank\",\n        children: \"XCHAIN\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"SUPPLY: \", info.supply]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"EST VAL: \", info.est_value]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"LAST DISP: \", info.dispenser_price]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    className: className,\n    onClick: () => {\n      console.log(props.asset);\n    },\n    children: [toggle.info ? cardInfo : null, /*#__PURE__*/_jsxDEV(\"img\", {\n      alt: props.asset,\n      src: props.src\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"asset-info\",\n      onClick: () => {\n        changeToggle();\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: props.asset\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: props.quantity\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CreateCard, \"WDJNVPNWJev4tNn5zcy9kKt0UFU=\");\n\n_c = CreateCard;\nexport default CreateCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateCard\");","map":{"version":3,"sources":["/Users/synesis/Documents/Developer/Counterview/src/components/CreateCard.js"],"names":["React","useState","useEffect","Fetch","CreateCard","props","toggle","setToggle","info","setInfo","supply","est_value","dispenser_price","callInfo","setCallInfo","className","series","changeToggle","prevState","updateData","asset_info","asset","val_usd","parseFloat","toFixed","asset_disp","dispenser_btc","length","toString","console","log","cardInfo","src","quantity"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport Fetch from \"./Fetch\"\n\n// Takes in image src, asset name and \n// quantity to return an image card for gallery view\n// TODO: Create alternative display for MP4\nfunction CreateCard(props) {\n    const [ toggle, setToggle ] = useState({\n        info: false\n    })\n    const [ info, setInfo ] = useState({\n        supply: 0,\n        est_value: \"USD$0\",\n        dispenser_price: \"0 BTC\"\n    })\n    const [ callInfo , setCallInfo ] = useState(false)\n\n    // Creates class names for card\n    const className = `image-card ${props.series}`\n\n    // Sets state for info toggle\n    function changeToggle() {\n        setToggle(prevState => ({\n            info: !prevState.info\n        }))\n    }\n\n    // Runs on call info so not to continuously call\n    useEffect(() => {\n        // Updates asset and market info on toggle\n        const updateData = async () => {\n            // Update info\n            const asset_info = await Fetch(\"asset\", props.asset)\n            let val_usd = \"Priceless\"\n            if(asset_info[\"estimated_value\"][\"usd\"] > 0.0) {\n                val_usd = parseFloat(asset_info[\"estimated_value\"][\"usd\"]).toFixed(4)\n            }\n\n            // Update dispenser\n            const asset_disp = await Fetch(\"dispensers\", props.asset)\n            let dispenser_btc = \"\"\n            if(asset_disp[\"data\"].length > 0) {\n                dispenser_btc = ((parseFloat(asset_disp[\"data\"][0][\"satoshirate\"]).toFixed(4)).toString() + \"BTC\")\n            } else {\n                dispenser_btc = \"Priceless\"\n            }\n\n            setInfo(prevState => ({\n                supply: asset_info[\"supply\"],\n                est_value: val_usd.toString(),\n                dispenser_price: dispenser_btc.toString()\n            }))\n        }\n        updateData()\n    }, [callInfo])\n\n    useState(() => {\n        console.log(info)\n    }, [info])\n\n\n    // Info component\n    const cardInfo = (\n        <span\n            class=\"card-info\"\n        >\n            <span class=\"fill\"></span>\n            <p>INFO</p>\n            <p><a href={`https://xchain.io/asset/${props.asset}`} target=\"_blank\">XCHAIN</a></p>\n            <p>SUPPLY: {info.supply}</p>\n            <p>EST VAL: {info.est_value}</p>\n            <p>LAST DISP: {info.dispenser_price}</p>\n        </span>\n    )\n\n    return (\n        <span \n            className={className}\n            onClick={() => {\n                console.log(props.asset)\n            }}\n        >\n            {toggle.info ? cardInfo : null}\n            <img \n                alt={props.asset}\n                src={props.src}\n            />\n            <p \n                className=\"asset-info\"\n                onClick={() => {\n                    changeToggle()\n                }}\n            >\n                <span>{props.asset}</span>\n                <span>{props.quantity}</span>\n            </p>\n        </span>\n    )\n}\n\nexport default CreateCard"]},"metadata":{},"sourceType":"module"}
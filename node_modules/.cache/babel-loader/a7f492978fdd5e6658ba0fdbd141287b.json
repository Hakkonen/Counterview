{"ast":null,"code":"var _jsxFileName = \"/Users/synesis/Documents/Developer/Counterview/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useEffect, useState } from \"react\";\nimport NavBar from \"./components/NavBar\";\nimport Gallery from \"./components/Gallery\";\nimport FindSrc from \"./components/FindSrc\";\nimport CreateCard from './components/CreateCard'; // TODOD:\n// 1. Make function that shows list of all fake pepes\n// 2. Make search data pull from form submit\n// 3. Enter submits search not relaods page\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // Global variables\n  const [wallet, setWallet] = useState([]);\n  const [data, setData] = useState({});\n  const [searchType, setSearchType] = useState(\"\"); // Allows writing of parent data from child\n\n  function onDataChange(input) {\n    setData(input);\n  }\n\n  function onSearchTypeChange(input) {\n    setSearchType(input);\n  } // On data update begin populating gallery\n\n\n  useEffect(() => {\n    // Filter JSON data for single asset or wallet balance\n    if (data[\"asset\"]) {\n      // Get asset details\n      const assetName = data[\"asset\"];\n      const assetQty = data[\"supply\"];\n      let assetSrc = FindSrc(assetName); // Create asset card\n      // setWallet({\"asset\": assetName, \"quantity\": assetQty, \"src\": assetSrc})\n\n      setWallet( /*#__PURE__*/_jsxDEV(CreateCard, {\n        id: 1,\n        asset: assetName,\n        quantity: assetQty,\n        src: assetSrc,\n        type: \"asset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 23\n      }, this));\n    } else if (data[\"data\"]) {\n      console.log(\"ADDRESS\");\n      console.log(data[\"data\"]); // Populate wallet with assets\n\n      if (data[\"data\"].length > 0) {\n        console.log(\"Parsing data\");\n        let cardList = [];\n        let count = 0;\n        const assetList = data[\"data\"];\n        assetList.forEach(asset => {\n          const assetName = asset[\"asset\"];\n          const assetQty = asset[\"quantity\"];\n          let assetSrc = FindSrc(assetName);\n          cardList.push( /*#__PURE__*/_jsxDEV(CreateCard, {\n            asset: assetName,\n            quantity: assetQty,\n            src: assetSrc,\n            type: \"address\"\n          }, count, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this));\n        }); // Update wallet\n\n        setWallet(cardList);\n      }\n    }\n  }, [data]); // When wallet state is updated\n\n  useEffect(() => {\n    console.log(\"Wallet:\");\n    console.log(wallet);\n  }, [wallet]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      data: data,\n      onDataChange: onDataChange,\n      onSearchTypeChange: onSearchTypeChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Gallery, {\n      wallet: wallet\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"RMpc4JHH2QBGoRCy6ItbkNF323E=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/synesis/Documents/Developer/Counterview/src/App.js"],"names":["React","useEffect","useState","NavBar","Gallery","FindSrc","CreateCard","App","wallet","setWallet","data","setData","searchType","setSearchType","onDataChange","input","onSearchTypeChange","assetName","assetQty","assetSrc","console","log","length","cardList","count","assetList","forEach","asset","push"],"mappings":"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","sourcesContent":["import './App.css'\nimport React, { useEffect, useState } from \"react\"\nimport NavBar from \"./components/NavBar\"\nimport Gallery from \"./components/Gallery\"\nimport FindSrc from \"./components/FindSrc\"\nimport CreateCard from './components/CreateCard'\n\n// TODOD:\n// 1. Make function that shows list of all fake pepes\n// 2. Make search data pull from form submit\n// 3. Enter submits search not relaods page\n\nfunction App() {\n    // Global variables\n    const [ wallet, setWallet ] = useState([])\n    const [ data, setData ] = useState({})\n    const [ searchType, setSearchType ] = useState(\"\")\n\n    // Allows writing of parent data from child\n    function onDataChange(input) {setData(input)}\n    function onSearchTypeChange(input) {setSearchType(input)}\n\n    // On data update begin populating gallery\n    useEffect(() => {\n        // Filter JSON data for single asset or wallet balance\n        if(data[\"asset\"]) {\n\n            // Get asset details\n            const assetName = data[\"asset\"]\n            const assetQty = data[\"supply\"]\n            let assetSrc = FindSrc(assetName)\n\n            // Create asset card\n            // setWallet({\"asset\": assetName, \"quantity\": assetQty, \"src\": assetSrc})\n            setWallet(<CreateCard id={1} asset={assetName} quantity={assetQty} src={assetSrc} type={\"asset\"} />)\n\n        } else if (data[\"data\"]) {\n            console.log(\"ADDRESS\")\n            console.log(data[\"data\"])\n\n            // Populate wallet with assets\n            if (data[\"data\"].length > 0) {\n\n                console.log(\"Parsing data\")\n                let cardList = []\n                let count = 0\n                const assetList = data[\"data\"]\n                \n                assetList.forEach((asset) => {\n                    const assetName = asset[\"asset\"]\n                    const assetQty = asset[\"quantity\"]\n                    let assetSrc = FindSrc(assetName)\n                    cardList.push(\n                        <CreateCard key={count} asset={assetName} quantity={assetQty} src={assetSrc} type={\"address\"} />\n                    )\n                })\n                \n                // Update wallet\n                setWallet(cardList)\n            }\n            \n        }\n    }, [data])\n\n    // When wallet state is updated\n    useEffect(() => {\n        console.log(\"Wallet:\")\n        console.log(wallet)\n    }, [wallet])\n\n    return (\n        <div>\n            <NavBar \n                data={data} \n                onDataChange={onDataChange}\n                onSearchTypeChange={onSearchTypeChange}\n            />\n            <Gallery \n                wallet={wallet}\n            />\n        </div>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
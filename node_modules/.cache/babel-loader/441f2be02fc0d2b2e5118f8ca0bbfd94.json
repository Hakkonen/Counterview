{"ast":null,"code":"import _regeneratorRuntime from\"/Users/synesis/Documents/Developer/Counterview/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/synesis/Documents/Developer/Counterview/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/synesis/Documents/Developer/Counterview/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import Fetch from\"./Fetch\";// Takes in image src, asset name and \n// quantity to return an image card for gallery view\n// TODO: Create alternative display for MP4\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function CreateCard(props){var _useState=useState({info:false}),_useState2=_slicedToArray(_useState,2),toggle=_useState2[0],setToggle=_useState2[1];var _useState3=useState({supply:0,est_value:\"$0\",dispenser_price:\"0 BTC\"}),_useState4=_slicedToArray(_useState3,2),info=_useState4[0],setInfo=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),callInfo=_useState6[0],setCallInfo=_useState6[1];// Creates class names for card\nvar className=\"image-card \".concat(props.series);// Sets state for info toggle\nfunction changeToggle(){setToggle(function(prevState){return{info:!prevState.info};});}// Runs on call info so not to continuously call\nuseEffect(function(){// Updates asset and market info on toggle\nvar updateData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var asset_info,val_usd,asset_disp,dispenser_btc;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return Fetch(\"asset\",props.asset);case 2:asset_info=_context.sent;val_usd=\"Priceless\";if(asset_info[\"estimated_value\"][\"usd\"]>0.0){val_usd=parseFloat(asset_info[\"estimated_value\"][\"usd\"]).toFixed(4);}// Update dispenser\n_context.next=7;return Fetch(\"dispensers\",props.asset);case 7:asset_disp=_context.sent;dispenser_btc=\"\";if(asset_disp[\"data\"].length>0){dispenser_btc=parseFloat(asset_disp[\"data\"][0][\"satoshirate\"]).toFixed(4).toString()+\"BTC\";}else{dispenser_btc=\"Priceless\";}setInfo(function(prevState){return{supply:asset_info[\"supply\"],est_value:val_usd.toString(),dispenser_price:dispenser_btc.toString()};});case 11:case\"end\":return _context.stop();}}},_callee);}));return function updateData(){return _ref.apply(this,arguments);};}();updateData();},[callInfo]);useState(function(){// console.log(info)\n},[info]);// Info component\nvar cardInfo=/*#__PURE__*/_jsxs(\"span\",{className:\"card-info\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"fill\"}),/*#__PURE__*/_jsx(\"p\",{children:\"INFO\"}),/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsx(\"a\",{href:\"https://xchain.io/asset/\".concat(props.asset),target:\"_blank\",children:\"XCHAIN\"})}),/*#__PURE__*/_jsxs(\"p\",{children:[\"SUPPLY: \",info.supply]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"EST VAL: \",info.est_value]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"LAST DISP: \",info.dispenser_price]})]});return/*#__PURE__*/_jsxs(\"span\",{className:className,onClick:function onClick(){},children:[toggle.info?cardInfo:null,/*#__PURE__*/_jsx(\"img\",{alt:props.asset,src:props.src}),/*#__PURE__*/_jsxs(\"p\",{className:\"asset-info\",onClick:function onClick(){changeToggle();},children:[/*#__PURE__*/_jsx(\"span\",{children:props.asset}),/*#__PURE__*/_jsx(\"span\",{children:props.quantity})]})]});}export default CreateCard;","map":{"version":3,"sources":["/Users/synesis/Documents/Developer/Counterview/src/components/CreateCard.js"],"names":["React","useState","useEffect","Fetch","CreateCard","props","info","toggle","setToggle","supply","est_value","dispenser_price","setInfo","callInfo","setCallInfo","className","series","changeToggle","prevState","updateData","asset","asset_info","val_usd","parseFloat","toFixed","asset_disp","dispenser_btc","length","toString","cardInfo","src","quantity"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport Fetch from \"./Fetch\"\n\n// Takes in image src, asset name and \n// quantity to return an image card for gallery view\n// TODO: Create alternative display for MP4\nfunction CreateCard(props) {\n    const [ toggle, setToggle ] = useState({\n        info: false\n    })\n    const [ info, setInfo ] = useState({\n        supply: 0,\n        est_value: \"$0\",\n        dispenser_price: \"0 BTC\"\n    })\n    const [ callInfo , setCallInfo ] = useState(false)\n\n    // Creates class names for card\n    const className = `image-card ${props.series}`\n\n    // Sets state for info toggle\n    function changeToggle() {\n        setToggle(prevState => ({\n            info: !prevState.info\n        }))\n    }\n\n    // Runs on call info so not to continuously call\n    useEffect(() => {\n        // Updates asset and market info on toggle\n        const updateData = async () => {\n            // Update info\n            const asset_info = await Fetch(\"asset\", props.asset)\n            let val_usd = \"Priceless\"\n            if(asset_info[\"estimated_value\"][\"usd\"] > 0.0) {\n                val_usd = parseFloat(asset_info[\"estimated_value\"][\"usd\"]).toFixed(4)\n            }\n\n            // Update dispenser\n            const asset_disp = await Fetch(\"dispensers\", props.asset)\n            let dispenser_btc = \"\"\n            if(asset_disp[\"data\"].length > 0) {\n                dispenser_btc = ((parseFloat(asset_disp[\"data\"][0][\"satoshirate\"]).toFixed(4)).toString() + \"BTC\")\n            } else {\n                dispenser_btc = \"Priceless\"\n            }\n\n            setInfo(prevState => ({\n                supply: asset_info[\"supply\"],\n                est_value: val_usd.toString(),\n                dispenser_price: dispenser_btc.toString()\n            }))\n        }\n        updateData()\n    }, [callInfo])\n\n    useState(() => {\n        // console.log(info)\n    }, [info])\n\n\n    // Info component\n    const cardInfo = (\n        <span\n            className=\"card-info\"\n        >\n            <span className=\"fill\"></span>\n            <p>INFO</p>\n            <p><a href={`https://xchain.io/asset/${props.asset}`} target=\"_blank\">XCHAIN</a></p>\n            <p>SUPPLY: {info.supply}</p>\n            <p>EST VAL: {info.est_value}</p>\n            <p>LAST DISP: {info.dispenser_price}</p>\n        </span>\n    )\n\n    return (\n        <span \n            className={className}\n            onClick={() => {\n                \n            }}\n        >\n            {toggle.info ? cardInfo : null}\n            <img \n                alt={props.asset}\n                src={props.src}\n            />\n            <p \n                className=\"asset-info\"\n                onClick={() => {\n                    changeToggle()\n                }}\n            >\n                <span>{props.asset}</span>\n                <span>{props.quantity}</span>\n            </p>\n        </span>\n    )\n}\n\nexport default CreateCard"]},"metadata":{},"sourceType":"module"}
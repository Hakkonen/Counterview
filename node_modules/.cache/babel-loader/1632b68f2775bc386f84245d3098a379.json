{"ast":null,"code":"import _slicedToArray from\"/Users/synesis/Documents/Developer/Counterview/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import'./App.css';import React,{useEffect,useState}from\"react\";import NavBar from\"./components/NavBar\";import Gallery from\"./components/Gallery\";import FindSrc from\"./components/FindSrc\";import CreateCard from'./components/CreateCard';// TODOD:\n// 1. Make function that shows list of all fake pepes\n// 2. Make search data pull from form submit\n// 3. Enter submits search not reloads page\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){// Global variables\nvar _useState=useState([]),_useState2=_slicedToArray(_useState,2),wallet=_useState2[0],setWallet=_useState2[1];var _useState3=useState({}),_useState4=_slicedToArray(_useState3,2),data=_useState4[0],setData=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),searchType=_useState6[0],setSearchType=_useState6[1];// Allows writing of parent data from child\nfunction onDataChange(input){setData(input);}function onSearchTypeChange(input){setSearchType(input);}// On data update begin populating gallery\nuseEffect(function(){// Filter JSON data for single asset or wallet balance\nif(data[\"asset\"]){// Get asset details\nvar assetName=data[\"asset\"];var assetQty=data[\"supply\"];var assetSrc=FindSrc(assetName);// Create asset card\n// setWallet({\"asset\": assetName, \"quantity\": assetQty, \"src\": assetSrc})\nsetWallet(/*#__PURE__*/_jsx(CreateCard,{asset:assetName,quantity:assetQty,src:assetSrc,type:\"asset\"},1));}else if(data[\"data\"]){// Populate wallet with assets\nif(data[\"data\"].length>0){console.log(\"Parsing data\");var cardList=[];var count=0;var assetList=data[\"data\"];assetList.forEach(function(asset){var assetName=asset[\"asset\"];var assetQty=asset[\"quantity\"];var assetSrc=FindSrc(assetName);// If asset src is found append to list\nif(assetSrc!=\"null\"){cardList.push(/*#__PURE__*/_jsx(CreateCard,{asset:assetName,quantity:assetQty,src:assetSrc,type:\"address\"},count));// Continue index count\ncount+=1;}});// Update wallet\nsetWallet(cardList);}}},[data]);// When wallet state is updated\nuseEffect(function(){},[wallet]);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(NavBar,{data:data,onDataChange:onDataChange,onSearchTypeChange:onSearchTypeChange}),/*#__PURE__*/_jsx(Gallery,{wallet:wallet})]});}export default App;","map":{"version":3,"sources":["/Users/synesis/Documents/Developer/Counterview/src/App.js"],"names":["React","useEffect","useState","NavBar","Gallery","FindSrc","CreateCard","App","wallet","setWallet","data","setData","searchType","setSearchType","onDataChange","input","onSearchTypeChange","assetName","assetQty","assetSrc","length","console","log","cardList","count","assetList","forEach","asset","push"],"mappings":"qKAAA,MAAO,WAAP,CACA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,MAAP,KAAmB,qBAAnB,CACA,MAAOC,CAAAA,OAAP,KAAoB,sBAApB,CACA,MAAOC,CAAAA,OAAP,KAAoB,sBAApB,CACA,MAAOC,CAAAA,UAAP,KAAuB,yBAAvB,CAEA;AACA;AACA;AACA;wFAEA,QAASC,CAAAA,GAAT,EAAe,CACX;AACA,cAA8BL,QAAQ,CAAC,EAAD,CAAtC,wCAAQM,MAAR,eAAgBC,SAAhB,eACA,eAA0BP,QAAQ,CAAC,EAAD,CAAlC,yCAAQQ,IAAR,eAAcC,OAAd,eACA,eAAsCT,QAAQ,CAAC,EAAD,CAA9C,yCAAQU,UAAR,eAAoBC,aAApB,eAEA;AACA,QAASC,CAAAA,YAAT,CAAsBC,KAAtB,CAA6B,CAACJ,OAAO,CAACI,KAAD,CAAP,CAAe,CAC7C,QAASC,CAAAA,kBAAT,CAA4BD,KAA5B,CAAmC,CAACF,aAAa,CAACE,KAAD,CAAb,CAAqB,CAEzD;AACAd,SAAS,CAAC,UAAM,CACZ;AACA,GAAGS,IAAI,CAAC,OAAD,CAAP,CAAkB,CAEd;AACA,GAAMO,CAAAA,SAAS,CAAGP,IAAI,CAAC,OAAD,CAAtB,CACA,GAAMQ,CAAAA,QAAQ,CAAGR,IAAI,CAAC,QAAD,CAArB,CACA,GAAIS,CAAAA,QAAQ,CAAGd,OAAO,CAACY,SAAD,CAAtB,CAEA;AACA;AACAR,SAAS,cAAC,KAAC,UAAD,EAAoB,KAAK,CAAEQ,SAA3B,CAAsC,QAAQ,CAAEC,QAAhD,CAA0D,GAAG,CAAEC,QAA/D,CAAyE,IAAI,CAAE,OAA/E,EAAiB,CAAjB,CAAD,CAAT,CAEH,CAXD,IAWO,IAAIT,IAAI,CAAC,MAAD,CAAR,CAAkB,CAErB;AACA,GAAIA,IAAI,CAAC,MAAD,CAAJ,CAAaU,MAAb,CAAsB,CAA1B,CAA6B,CAEzBC,OAAO,CAACC,GAAR,CAAY,cAAZ,EACA,GAAIC,CAAAA,QAAQ,CAAG,EAAf,CACA,GAAIC,CAAAA,KAAK,CAAG,CAAZ,CACA,GAAMC,CAAAA,SAAS,CAAGf,IAAI,CAAC,MAAD,CAAtB,CAEAe,SAAS,CAACC,OAAV,CAAkB,SAACC,KAAD,CAAW,CACzB,GAAMV,CAAAA,SAAS,CAAGU,KAAK,CAAC,OAAD,CAAvB,CACA,GAAMT,CAAAA,QAAQ,CAAGS,KAAK,CAAC,UAAD,CAAtB,CACA,GAAIR,CAAAA,QAAQ,CAAGd,OAAO,CAACY,SAAD,CAAtB,CACA;AACA,GAAGE,QAAQ,EAAI,MAAf,CAAuB,CACfI,QAAQ,CAACK,IAAT,cACI,KAAC,UAAD,EAAwB,KAAK,CAAEX,SAA/B,CAA0C,QAAQ,CAAEC,QAApD,CAA8D,GAAG,CAAEC,QAAnE,CAA6E,IAAI,CAAE,SAAnF,EAAiBK,KAAjB,CADJ,EAGA;AACAA,KAAK,EAAI,CAAT,CACH,CACR,CAZD,EAcA;AACAf,SAAS,CAACc,QAAD,CAAT,CACH,CAEJ,CACJ,CA1CQ,CA0CN,CAACb,IAAD,CA1CM,CAAT,CA4CA;AACAT,SAAS,CAAC,UAAM,CAEf,CAFQ,CAEN,CAACO,MAAD,CAFM,CAAT,CAIA,mBACI,oCACI,KAAC,MAAD,EACI,IAAI,CAAEE,IADV,CAEI,YAAY,CAAEI,YAFlB,CAGI,kBAAkB,CAAEE,kBAHxB,EADJ,cAMI,KAAC,OAAD,EACI,MAAM,CAAER,MADZ,EANJ,GADJ,CAYH,CAED,cAAeD,CAAAA,GAAf","sourcesContent":["import './App.css'\nimport React, { useEffect, useState } from \"react\"\nimport NavBar from \"./components/NavBar\"\nimport Gallery from \"./components/Gallery\"\nimport FindSrc from \"./components/FindSrc\"\nimport CreateCard from './components/CreateCard'\n\n// TODOD:\n// 1. Make function that shows list of all fake pepes\n// 2. Make search data pull from form submit\n// 3. Enter submits search not reloads page\n\nfunction App() {\n    // Global variables\n    const [ wallet, setWallet ] = useState([])\n    const [ data, setData ] = useState({})\n    const [ searchType, setSearchType ] = useState(\"\")\n\n    // Allows writing of parent data from child\n    function onDataChange(input) {setData(input)}\n    function onSearchTypeChange(input) {setSearchType(input)}\n\n    // On data update begin populating gallery\n    useEffect(() => {\n        // Filter JSON data for single asset or wallet balance\n        if(data[\"asset\"]) {\n\n            // Get asset details\n            const assetName = data[\"asset\"]\n            const assetQty = data[\"supply\"]\n            let assetSrc = FindSrc(assetName)\n\n            // Create asset card\n            // setWallet({\"asset\": assetName, \"quantity\": assetQty, \"src\": assetSrc})\n            setWallet(<CreateCard key={1} asset={assetName} quantity={assetQty} src={assetSrc} type={\"asset\"} />)\n\n        } else if (data[\"data\"]) {\n\n            // Populate wallet with assets\n            if (data[\"data\"].length > 0) {\n\n                console.log(\"Parsing data\")\n                let cardList = []\n                let count = 0\n                const assetList = data[\"data\"]\n                \n                assetList.forEach((asset) => {\n                    const assetName = asset[\"asset\"]\n                    const assetQty = asset[\"quantity\"]\n                    let assetSrc = FindSrc(assetName)\n                    // If asset src is found append to list\n                    if(assetSrc != \"null\") {\n                            cardList.push(\n                                <CreateCard key={count} asset={assetName} quantity={assetQty} src={assetSrc} type={\"address\"} />\n                            )\n                            // Continue index count\n                            count += 1\n                        }\n                })\n                \n                // Update wallet\n                setWallet(cardList)\n            }\n            \n        }\n    }, [data])\n\n    // When wallet state is updated\n    useEffect(() => {\n        \n    }, [wallet])\n\n    return (\n        <div>\n            <NavBar \n                data={data} \n                onDataChange={onDataChange}\n                onSearchTypeChange={onSearchTypeChange}\n            />\n            <Gallery \n                wallet={wallet}\n            />\n        </div>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/synesis/Documents/Developer/Counterview/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useEffect, useState } from \"react\";\nimport NavBar from \"./components/NavBar\";\nimport Gallery from \"./components/Gallery\";\nimport FindSrc from \"./components/FindSrc\";\nimport CreateCard from './components/CreateCard'; // TODOD:\n// a. Load only when scroll down\n// 1. Make function that shows list of all fake pepes\n// 2. Make search data pull from form submit\n// 3. Enter submits search not reloads page\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // Global variables\n  const [wallet, setWallet] = useState([]);\n  const [data, setData] = useState({});\n  const [pepeFilter, setPepeFilter] = useState({\n    original: false,\n    fake: true\n  }); // Allows writing of parent data from child\n\n  function onDataChange(input) {\n    setData(input);\n  } // On data update begin populating gallery\n\n\n  useEffect(() => {\n    // Filter JSON data for single asset or wallet balance\n    if (data[\"asset\"]) {\n      // Get asset details\n      const assetName = data[\"asset\"];\n      const assetQty = data[\"supply\"];\n      let asset_src_series = FindSrc(assetName); // Checks against fake json and returns img src\n\n      const assetSrc = asset_src_series[0];\n      const series = asset_src_series[1]; // Create asset card\n\n      setWallet( /*#__PURE__*/_jsxDEV(CreateCard, {\n        series: series,\n        asset: assetName,\n        quantity: assetQty,\n        src: assetSrc,\n        type: \"asset\"\n      }, 1, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 23\n      }, this));\n    } else if (data[\"data\"]) {\n      // Populate wallet with assets\n      if (data[\"data\"].length > 0) {\n        let cardList = [];\n        let count = 0;\n        const assetList = data[\"data\"];\n        console.log(assetList);\n        assetList.forEach(asset => {\n          const assetName = asset[\"asset\"];\n          const assetQty = asset[\"quantity\"];\n          let asset_src_series = FindSrc(assetName); // Checks for src\n\n          const assetSrc = asset_src_series[0];\n          const series = asset_src_series[1]; // If asset src is found append to list\n\n          if (assetSrc != \"null\") {\n            cardList.push( /*#__PURE__*/_jsxDEV(CreateCard, {\n              series: series,\n              asset: assetName,\n              quantity: assetQty,\n              src: assetSrc,\n              type: \"address\"\n            }, count, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 33\n            }, this)); // Continue index count\n\n            count += 1;\n          }\n        }); // Update wallet\n\n        setWallet(cardList);\n      }\n    }\n  }, [data]); // FILTER FUNCS\n\n  function onFilterChange(type) {\n    // If input is original filter toggles allow OG pepes\n    if (type === \"original\") {\n      setPepeFilter(prevState => ({\n        original: !prevState.original,\n        fake: prevState.fake\n      }));\n    } else if (type === \"fake\") {\n      // If input is fake filter toggles allow OG pepes\n      setPepeFilter(prevState => ({\n        original: prevState.original,\n        fake: !prevState.fake\n      }));\n    }\n\n    console.log(pepeFilter);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      data: data,\n      onDataChange: onDataChange,\n      pepeFilter: pepeFilter,\n      onFilterChange: onFilterChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Gallery, {\n      wallet: wallet,\n      pepeFilter: pepeFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"3m4l5PQOZW+cdFVuSXI0KpdD8IY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/synesis/Documents/Developer/Counterview/src/App.js"],"names":["React","useEffect","useState","NavBar","Gallery","FindSrc","CreateCard","App","wallet","setWallet","data","setData","pepeFilter","setPepeFilter","original","fake","onDataChange","input","assetName","assetQty","asset_src_series","assetSrc","series","length","cardList","count","assetList","console","log","forEach","asset","push","onFilterChange","type","prevState"],"mappings":"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","sourcesContent":["import './App.css'\nimport React, { useEffect, useState } from \"react\"\nimport NavBar from \"./components/NavBar\"\nimport Gallery from \"./components/Gallery\"\nimport FindSrc from \"./components/FindSrc\"\nimport CreateCard from './components/CreateCard'\n\n// TODOD:\n// a. Load only when scroll down\n// 1. Make function that shows list of all fake pepes\n// 2. Make search data pull from form submit\n// 3. Enter submits search not reloads page\n\nfunction App() {\n    // Global variables\n    const [ wallet, setWallet ] = useState([])\n    const [ data, setData ] = useState({})\n    const [ pepeFilter, setPepeFilter ] = useState({\n        original: false,\n        fake: true\n    })\n\n    // Allows writing of parent data from child\n    function onDataChange(input) {setData(input)}\n    \n    // On data update begin populating gallery\n    useEffect(() => {\n        // Filter JSON data for single asset or wallet balance\n        if(data[\"asset\"]) {\n\n            // Get asset details\n            const assetName = data[\"asset\"]\n            const assetQty = data[\"supply\"]\n            let asset_src_series = FindSrc(assetName)   // Checks against fake json and returns img src\n            const assetSrc = asset_src_series[0]\n            const series = asset_src_series[1]\n\n            // Create asset card\n            setWallet(<CreateCard key={1} series={series} asset={assetName} quantity={assetQty} src={assetSrc} type={\"asset\"} />)\n\n        } else if (data[\"data\"]) {\n\n            // Populate wallet with assets\n            if (data[\"data\"].length > 0) {\n\n                let cardList = []\n                let count = 0\n                const assetList = data[\"data\"]\n                console.log(assetList)\n                \n                assetList.forEach((asset) => {\n                    const assetName = asset[\"asset\"]\n                    const assetQty = asset[\"quantity\"]\n                    let asset_src_series = FindSrc(assetName) // Checks for src\n                    const assetSrc = asset_src_series[0]\n                    const series = asset_src_series[1]\n                    // If asset src is found append to list\n                    if(assetSrc != \"null\") {\n                            cardList.push(\n                                <CreateCard key={count} series={series} asset={assetName} quantity={assetQty} src={assetSrc} type={\"address\"} />\n                            )\n                            // Continue index count\n                            count += 1\n                        }\n                })\n                \n                // Update wallet\n                setWallet(cardList)\n            }\n            \n        }\n    }, [data])\n\n    // FILTER FUNCS\n    function onFilterChange(type) {\n        // If input is original filter toggles allow OG pepes\n        if(type === \"original\") {\n            setPepeFilter(prevState => ({\n                original: !prevState.original,\n                fake: prevState.fake\n            }))\n        } else if (type === \"fake\") {\n        // If input is fake filter toggles allow OG pepes\n            setPepeFilter(prevState => ({\n                original: prevState.original,\n                fake: !prevState.fake\n            }))\n        }\n        console.log(pepeFilter)\n    }\n\n    return (\n        <div>\n            <NavBar \n                data={data} \n                onDataChange={onDataChange}\n                pepeFilter={pepeFilter}\n                onFilterChange={onFilterChange}\n            />\n            <Gallery \n                wallet={wallet}\n                pepeFilter={pepeFilter}\n            />\n        </div>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
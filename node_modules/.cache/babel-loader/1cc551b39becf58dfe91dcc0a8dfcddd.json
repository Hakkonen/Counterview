{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\n\nfunction Fetch(type, value) {\n  _s();\n\n  const [data, setData] = useState(null); // Receives type [asset, address] and searches api for value\n\n  const fetchData = async (type, value) => {\n    console.log(`https://xchain.io/api/${type}/${value}`);\n    const res = await fetch(`https://xchain.io/api/${type}/${value}`);\n    const json = await res.json();\n    return json[\"data\"];\n  };\n\n  fetchData(type, value).then(res => {\n    setData(res);\n    console.log(\"Set data: \" + data);\n  }); // Returns API JSON data\n\n  return data;\n}\n\n_s(Fetch, \"tS33Y+HHWphSzOQfJpfDHpn7jns=\");\n\n_c = Fetch;\nexport default Fetch;\n\nvar _c;\n\n$RefreshReg$(_c, \"Fetch\");","map":{"version":3,"sources":["/Users/synesis/Documents/Developer/Counterview/src/components/Fetch.js"],"names":["React","useState","Fetch","type","value","data","setData","fetchData","console","log","res","fetch","json","then"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,SAASC,KAAT,CAAeC,IAAf,EAAqBC,KAArB,EAA4B;AAAA;;AACxB,QAAM,CAAEC,IAAF,EAAQC,OAAR,IAAoBL,QAAQ,CAAC,IAAD,CAAlC,CADwB,CAGxB;;AACA,QAAMM,SAAS,GAAG,OAAOJ,IAAP,EAAaC,KAAb,KAAuB;AACrCI,IAAAA,OAAO,CAACC,GAAR,CAAa,yBAAwBN,IAAK,IAAGC,KAAM,EAAnD;AACA,UAAMM,GAAG,GAAG,MAAMC,KAAK,CAAE,yBAAwBR,IAAK,IAAGC,KAAM,EAAxC,CAAvB;AACA,UAAMQ,IAAI,GAAG,MAAMF,GAAG,CAACE,IAAJ,EAAnB;AACA,WAAOA,IAAI,CAAC,MAAD,CAAX;AACH,GALD;;AAMAL,EAAAA,SAAS,CAACJ,IAAD,EAAOC,KAAP,CAAT,CACKS,IADL,CACUH,GAAG,IAAI;AACTJ,IAAAA,OAAO,CAACI,GAAD,CAAP;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAeJ,IAA3B;AACH,GAJL,EAVwB,CAgBxB;;AACA,SAAOA,IAAP;AACH;;GAlBQH,K;;KAAAA,K;AAoBT,eAAeA,KAAf","sourcesContent":["import React, { useState } from \"react\"\n\nfunction Fetch(type, value) {\n    const [ data, setData ] = useState(null)\n\n    // Receives type [asset, address] and searches api for value\n    const fetchData = async (type, value) => {\n        console.log(`https://xchain.io/api/${type}/${value}`)\n        const res = await fetch(`https://xchain.io/api/${type}/${value}`)\n        const json = await res.json()\n        return json[\"data\"]\n    }\n    fetchData(type, value)\n        .then(res => {\n            setData(res)\n            console.log(\"Set data: \" + data)\n        })\n\n    // Returns API JSON data\n    return data\n}\n\nexport default Fetch"]},"metadata":{},"sourceType":"module"}
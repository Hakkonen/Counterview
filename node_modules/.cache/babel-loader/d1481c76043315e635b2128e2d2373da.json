{"ast":null,"code":"import _slicedToArray from\"/Users/synesis/Documents/Developer/Counterview/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import'./App.css';import React,{useEffect,useState}from\"react\";import NavBar from\"./components/NavBar\";import Gallery from\"./components/Gallery\";import FindSrc from\"./components/FindSrc\";import CreateCard from'./components/CreateCard';// TODOD:\n// a. Load only when scroll down\n// 1. Make function that shows list of all fake pepes\n// 2. Make search data pull from form submit\n// 3. Enter submits search not reloads page\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){// Global variables\nvar _useState=useState([]),_useState2=_slicedToArray(_useState,2),wallet=_useState2[0],setWallet=_useState2[1];var _useState3=useState({}),_useState4=_slicedToArray(_useState3,2),data=_useState4[0],setData=_useState4[1];var _useState5=useState({original:false,fake:true}),_useState6=_slicedToArray(_useState5,2),pepeFilter=_useState6[0],setPepeFilter=_useState6[1];// Allows writing of parent data from child\nfunction onDataChange(input){setData(input);}// On data update begin populating gallery\nuseEffect(function(){// Filter JSON data for single asset or wallet balance\nif(data[\"asset\"]){// Get asset details\nvar assetName=data[\"asset\"];var assetQty=data[\"supply\"];var asset_src_series=FindSrc(assetName);// Checks against fake json and returns img src\nvar assetSrc=asset_src_series[0];var series=asset_src_series[1];// Create asset card\nsetWallet(/*#__PURE__*/_jsx(CreateCard,{series:series,asset:assetName,quantity:assetQty,src:assetSrc,type:\"asset\"},1));}else if(data[\"data\"]){// Populate wallet with assets\nif(data[\"data\"].length>0){var cardList=[];var count=0;var assetList=data[\"data\"];assetList.forEach(function(asset){var assetName=asset[\"asset\"];var assetQty=asset[\"quantity\"];var asset_src_series=FindSrc(assetName);// Checks for src\nvar assetSrc=asset_src_series[0];var series=asset_src_series[1];// If asset src is found append to list\nif(assetSrc!==\"null\"){// Check if asset matches filters\nif(pepeFilter.original&&series===\"original\"||pepeFilter.fake&&series===\"fake\"){cardList.push(/*#__PURE__*/_jsx(CreateCard,{series:series,asset:assetName,quantity:assetQty,src:assetSrc,pepeFilter:pepeFilter},count));// Continue index count\ncount+=1;}}});// Update wallet\nsetWallet(cardList);}}},[data,pepeFilter]);// FILTER FUNCS\nfunction onFilterChange(type){// If input is original filter toggles allow OG pepes\nif(type===\"original\"){setPepeFilter(function(prevState){return{original:!prevState.original,fake:prevState.fake};});}else if(type===\"fake\"){// If input is fake filter toggles allow OG pepes\nsetPepeFilter(function(prevState){return{original:prevState.original,fake:!prevState.fake};});}}return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(NavBar,{data:data,onDataChange:onDataChange,pepeFilter:pepeFilter,onFilterChange:onFilterChange}),/*#__PURE__*/_jsx(Gallery,{wallet:wallet,pepeFilter:pepeFilter})]});}export default App;","map":{"version":3,"sources":["/Users/synesis/Documents/Developer/Counterview/src/App.js"],"names":["React","useEffect","useState","NavBar","Gallery","FindSrc","CreateCard","App","wallet","setWallet","data","setData","original","fake","pepeFilter","setPepeFilter","onDataChange","input","assetName","assetQty","asset_src_series","assetSrc","series","length","cardList","count","assetList","forEach","asset","push","onFilterChange","type","prevState"],"mappings":"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","sourcesContent":["import './App.css'\nimport React, { useEffect, useState } from \"react\"\nimport NavBar from \"./components/NavBar\"\nimport Gallery from \"./components/Gallery\"\nimport FindSrc from \"./components/FindSrc\"\nimport CreateCard from './components/CreateCard'\n\n// TODOD:\n// a. Load only when scroll down\n// 1. Make function that shows list of all fake pepes\n// 2. Make search data pull from form submit\n// 3. Enter submits search not reloads page\n\nfunction App() {\n    // Global variables\n    const [ wallet, setWallet ] = useState([])\n    const [ data, setData ] = useState({})\n    const [ pepeFilter, setPepeFilter ] = useState({\n        original: false,\n        fake: true\n    })\n\n    // Allows writing of parent data from child\n    function onDataChange(input) {setData(input)}\n    \n    // On data update begin populating gallery\n    useEffect(() => {\n        // Filter JSON data for single asset or wallet balance\n        if(data[\"asset\"]) {\n\n            // Get asset details\n            const assetName = data[\"asset\"]\n            const assetQty = data[\"supply\"]\n            let asset_src_series = FindSrc(assetName)   // Checks against fake json and returns img src\n            const assetSrc = asset_src_series[0]\n            const series = asset_src_series[1]\n\n            // Create asset card\n            setWallet(<CreateCard key={1} series={series} asset={assetName} quantity={assetQty} src={assetSrc} type={\"asset\"} />)\n\n        } else if (data[\"data\"]) {\n\n            // Populate wallet with assets\n            if (data[\"data\"].length > 0) {\n\n                let cardList = []\n                let count = 0\n                const assetList = data[\"data\"]\n                \n                assetList.forEach((asset) => {\n                    const assetName = asset[\"asset\"]\n                    const assetQty = asset[\"quantity\"]\n                    let asset_src_series = FindSrc(assetName) // Checks for src\n                    const assetSrc = asset_src_series[0]\n                    const series = asset_src_series[1]\n                    // If asset src is found append to list\n                    if(assetSrc !== \"null\") {\n                        // Check if asset matches filters\n                        if((pepeFilter.original && series === \"original\") || (pepeFilter.fake && series === \"fake\")) {\n                                cardList.push(\n                                    <CreateCard key={count} series={series} asset={assetName} quantity={assetQty} src={assetSrc} pepeFilter={pepeFilter} />\n                                )\n                                // Continue index count\n                                count += 1\n                            }\n                        }\n                })\n                \n                // Update wallet\n                setWallet(cardList)\n            }\n            \n        }\n    }, [data, pepeFilter])\n\n    // FILTER FUNCS\n    function onFilterChange(type) {\n        // If input is original filter toggles allow OG pepes\n        if(type === \"original\") {\n            setPepeFilter(prevState => ({\n                original: !prevState.original,\n                fake: prevState.fake\n            }))\n        } else if (type === \"fake\") {\n        // If input is fake filter toggles allow OG pepes\n            setPepeFilter(prevState => ({\n                original: prevState.original,\n                fake: !prevState.fake\n            }))\n        }\n    }\n\n    return (\n        <div>\n            <NavBar \n                data={data} \n                onDataChange={onDataChange}\n                pepeFilter={pepeFilter}\n                onFilterChange={onFilterChange}\n            />\n            <Gallery \n                wallet={wallet}\n                pepeFilter={pepeFilter}\n            />\n        </div>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
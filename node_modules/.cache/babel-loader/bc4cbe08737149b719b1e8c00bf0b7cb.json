{"ast":null,"code":"var _jsxFileName = \"/Users/synesis/Documents/Developer/Counterview/src/components/NavBar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Container, Nav, Navbar, NavDropdown, Form, FormControl, Button } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NavBar(props) {\n  _s();\n\n  const [input, setInput] = useState(\"\"); // Search input box value\n\n  const [result, setResult] = useState(\"\"); // Fetch results\n  // 1. Handles search input\n\n  function handleInput(input) {\n    setInput(input);\n  } // 2. Receives search input and filters length to determine if asset or address then fetches API data\n\n\n  const Fetch = async (type, value) => {\n    console.log(`https://xchain.io/api/${type}/${value}`);\n    const res = await fetch(`https://xchain.io/api/${type}/${value}`);\n    const json = await res.json();\n    return json[\"data\"];\n  };\n\n  const search = async value => {\n    // If text input is not length of address then search for asset\n    if (value.length < 33) {\n      // setResult(Fetch(\"asset\", searchValue))\n      setResult(await Fetch(\"asset\", value));\n      console.log(result);\n    } else {\n      // Search an address\n      // setResult(Fetch(\"address\", searchValue))\n      setResult(await Fetch(\"balances\", value));\n      console.log(result);\n    }\n  }; // 3. \n\n\n  return /*#__PURE__*/_jsxDEV(Navbar, {\n    collapseOnSelect: true,\n    expand: \"lg\",\n    bg: \"dark\",\n    variant: \"dark\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar.Brand, {\n        href: \"\",\n        children: \"Counterview.club\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Navbar.Toggle, {\n        \"aria-controls\": \"responsive-navbar-nav\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Navbar.Collapse, {\n        id: \"responsive-navbar-nav\",\n        children: [/*#__PURE__*/_jsxDEV(Nav, {\n          className: \"me-auto\",\n          children: /*#__PURE__*/_jsxDEV(NavDropdown, {\n            title: \"Donate\",\n            id: \"collasible-nav-dropdown\",\n            children: /*#__PURE__*/_jsxDEV(NavDropdown.Item, {\n              href: \"\",\n              onClick: () => {\n                navigator.clipboard.writeText(\"1EWFR9dMzM2JtrXeqwVCY1LW6KMZ1iRhJ5\");\n              },\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-wrap\",\n                children: \"Copy: 1EWFR9dMzM2JtrXeqwVCY1LW6KMZ1iRhJ5\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          className: \"d-flex\",\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            type: \"search\",\n            placeholder: \"Search XCP Address\",\n            className: \"mr-2 search-field\",\n            \"aria-label\": \"Search\",\n            onChange: e => {\n              handleInput(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outline-success\",\n            className: \"search-button\",\n            onClick: () => {\n              search(input);\n            },\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n_s(NavBar, \"pZ/Hli40l6LQAJXBMm9hwbWAeuA=\");\n\n_c = NavBar;\nexport default NavBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavBar\");","map":{"version":3,"sources":["/Users/synesis/Documents/Developer/Counterview/src/components/NavBar.js"],"names":["React","useState","Container","Nav","Navbar","NavDropdown","Form","FormControl","Button","NavBar","props","input","setInput","result","setResult","handleInput","Fetch","type","value","console","log","res","fetch","json","search","length","navigator","clipboard","writeText","e","target"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\nimport { Container, Nav, Navbar, NavDropdown, Form, FormControl, Button } from \"react-bootstrap\"\n\nfunction NavBar(props) {\n    const [ input, setInput ] = useState(\"\")    // Search input box value\n    const [ result, setResult ] = useState(\"\")  // Fetch results\n\n    // 1. Handles search input\n    function handleInput(input) {\n        setInput(input)\n    }\n\n    // 2. Receives search input and filters length to determine if asset or address then fetches API data\n    const Fetch = async (type, value) => {\n        console.log(`https://xchain.io/api/${type}/${value}`)\n        const res = await fetch(`https://xchain.io/api/${type}/${value}`)\n        const json = await res.json()\n        return json[\"data\"]\n    }\n\n    const search = async (value) => {\n\n        // If text input is not length of address then search for asset\n        if(value.length < 33) {\n            // setResult(Fetch(\"asset\", searchValue))\n            setResult( await Fetch(\"asset\", value))\n            console.log(result)\n        } else {\n        // Search an address\n            // setResult(Fetch(\"address\", searchValue))\n            setResult( await Fetch(\"balances\", value))\n            console.log(result)\n        }\n    }\n\n    // 3. \n\n\n    return (\n        <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n            <Container>\n                <Navbar.Brand href=\"\">Counterview.club</Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\n                <Nav className=\"me-auto\">\n                    {/* <Nav.Link href=\"\">About</Nav.Link> */}\n                    <NavDropdown title=\"Donate\" id=\"collasible-nav-dropdown\">\n                    <NavDropdown.Item \n                        href=\"\"\n                        onClick={() => {navigator.clipboard.writeText(\"1EWFR9dMzM2JtrXeqwVCY1LW6KMZ1iRhJ5\")}}\n                    >\n                            <span className=\"text-wrap\">Copy: 1EWFR9dMzM2JtrXeqwVCY1LW6KMZ1iRhJ5</span>\n                        </NavDropdown.Item>\n                    </NavDropdown>\n                </Nav>\n                <Form className=\"d-flex\">\n                <FormControl\n                    type=\"search\"\n                    placeholder=\"Search XCP Address\"\n                    className=\"mr-2 search-field\"\n                    aria-label=\"Search\"\n                    onChange={(e)=>{\n                        handleInput(e.target.value)\n                    }}\n                />\n                <Button \n                    variant=\"outline-success\"\n                    className=\"search-button\"\n                    onClick={() => {\n                        search(input)\n                    }}\n                >Search</Button>\n                </Form>\n                </Navbar.Collapse>\n            </Container>\n        </Navbar>\n    )\n}\n\nexport default NavBar"]},"metadata":{},"sourceType":"module"}
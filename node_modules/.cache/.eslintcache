[{"/Users/synesis/Documents/Developer/Counterview/src/index.js":"1","/Users/synesis/Documents/Developer/Counterview/src/App.js":"2","/Users/synesis/Documents/Developer/Counterview/src/reportWebVitals.js":"3","/Users/synesis/Documents/Developer/Counterview/src/components/NavBar.js":"4","/Users/synesis/Documents/Developer/Counterview/src/components/Fetch.js":"5","/Users/synesis/Documents/Developer/Counterview/src/components/Gallery.js":"6","/Users/synesis/Documents/Developer/Counterview/src/components/CreateCard.js":"7","/Users/synesis/Documents/Developer/Counterview/src/components/FindSrc.js":"8","/Users/synesis/Documents/Developer/Counterview/src/components/AutoComplete.js":"9","/Users/synesis/Documents/Developer/Counterview/src/components/LazyImage.js":"10"},{"size":547,"mtime":1634182994755,"results":"11","hashOfConfig":"12"},{"size":4341,"mtime":1636094487436,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1634178777864,"results":"14","hashOfConfig":"12"},{"size":5291,"mtime":1635289387690,"results":"15","hashOfConfig":"12"},{"size":2009,"mtime":1635288109873,"results":"16","hashOfConfig":"12"},{"size":174,"mtime":1634272121155,"results":"17","hashOfConfig":"12"},{"size":3158,"mtime":1635203467099,"results":"18","hashOfConfig":"12"},{"size":742,"mtime":1634275194487,"results":"19","hashOfConfig":"12"},{"size":4364,"mtime":1635288921091,"results":"20","hashOfConfig":"12"},{"size":430,"mtime":1635203481498,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1l8bc9c",{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"31"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":1,"source":"39","usedDeprecatedRules":"31"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"31"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"31"},"/Users/synesis/Documents/Developer/Counterview/src/index.js",[],"/Users/synesis/Documents/Developer/Counterview/src/App.js",["48","49","50","51","52","53"],"/Users/synesis/Documents/Developer/Counterview/src/reportWebVitals.js",[],"/Users/synesis/Documents/Developer/Counterview/src/components/NavBar.js",["54","55"],"import React, { useState, useEffect } from \"react\"\nimport { Container, Nav, Navbar, Form, NavDropdown, Button } from \"react-bootstrap\"\nimport Fetch from \"./Fetch\"\nimport AutoComplete from \"./AutoComplete\";\n\nfunction NavBar(props) {\n    const [ input, setInput ] = useState(\"\")    // Search input box value\n    const [ result, setResult ] = useState({asset: \"\", supply: \"0\"})  // Fetch results\n\n    // 1. Handles search input\n    function handleInput(input) {\n        setInput(input)\n    }\n    function handleChange(e) {\n        console.log(e.target.value)\n        const string = e.target.value\n        setInput(string)\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault();\n    }\n\n    // 2. Receives search input and filters length to determine if asset or address then fetches API data\n    const search = async (value) => {\n\n        // If text input is not length of address then search for asset\n        if(value.length < 28) {\n            setInput(value.toUpperCase())\n            const res = await Fetch(\"asset\", value.toUpperCase())\n            setResult(res)\n        } else {\n        // Search an address\n            const res = await Fetch(\"balances\", value)\n            setResult(res)\n        }\n    }\n\n    // 3. Updates wallet values when async is complete\n    useEffect(() => {\n        console.log(\"RESULT\")\n        console.log(result)\n        // Passes JSON data to parent\n        props.onDataChange(result)\n    }, [result])\n    \n    return (\n        <Navbar collapseOnSelect className=\"navBar\" expand=\"lg\"variant=\"dark\">\n            <Container>\n                <Navbar.Brand href=\"\" className=\"logo\">Counterview.club</Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\n                <Nav className=\"me-auto\">\n                    {/* <Nav.Link \n                        className={props.pepeFilter.original ? \"selected-filter\" : \"nav-link\"}\n                        onClick={() => {\n                            props.onFilterChange(\"original\")\n                        }}\n                    >OG Peps</Nav.Link> */}\n                    <NavDropdown title=\"OG Peps\">\n                    <NavDropdown.Item>\n                        Coming Soon\n                    </NavDropdown.Item>\n                    </NavDropdown>\n\n                    <Nav.Link \n                        className={props.pepeFilter.fake ? \"selected-filter\" : \"nav-link\"}\n                        onClick={() => {\n                            props.onFilterChange(\"fake\")\n                        }}\n                    >Fakes</Nav.Link>\n                    {/* <Nav.Link \n                        href=\"https://fapep.github.io/FABRIQUE/\"\n                        target=\"_blank\"\n                    >About</Nav.Link> */}\n                    <NavDropdown title=\"Donate\">\n                    <NavDropdown.Item nowrap\n                            onClick={() => {\n                                navigator.clipboard.writeText(\"1EWFR9dMzM2JtrXeqwVCY1LW6KMZ1iRhJ5\")\n                            }}\n                        >\n                            Fabrique\n                    </NavDropdown.Item>\n                    <NavDropdown.Item nowrap\n                            onClick={() => {\n                                navigator.clipboard.writeText(\"1EWFR9dMzM2JtrXeqwVCY1LW6KMZ1iRhJ5\")\n                            }}\n                        >\n                            Copy: 1EWFR9dMzM2JtrXeqwVCY1LW6KMZ1iRhJ5\n                        </NavDropdown.Item>\n                        <NavDropdown.Item \n                        onClick={() => {\n                                navigator.clipboard.writeText(\"hello.fabrique@protonmail.com\")\n                        }}>\n                        Copy email\n                    </NavDropdown.Item>\n                    </NavDropdown>\n                </Nav>\n                <Form \n                    id=\"search-input\"\n                    className=\"d-flex\"\n                    onClick={(e) => {\n                        // console.log(e.target)\n                    }}\n                    onChange={(e) => {\n                        handleChange(e)\n                    }}\n                    onSubmit={(e) => {\n                        handleSubmit(e)\n                        e.preventDefault()\n                    }}\n                >\n                <AutoComplete \n                    className=\"mr-2 search-field\"\n                    setInput={setInput} \n                    search={search} \n                    input={input} \n                />\n                {/* <FormControl\n                    type=\"search\"\n                    placeholder=\"Search asset or address\"\n                    className=\"mr-2 search-field\"\n                    aria-label=\"Search\"\n                    onChange={(e)=>{\n                        handleInput(e.target.value)\n                    }}\n                /> */}\n                <Button \n                    variant=\"outline-success\"\n                    className=\"search-button\"\n                    onClick={() => {\n                        search(input)\n                    }}\n                >Search</Button>\n                </Form>\n                </Navbar.Collapse>\n            </Container>\n        </Navbar>\n    )\n}\n\nexport default NavBar",["56","57"],"/Users/synesis/Documents/Developer/Counterview/src/components/Fetch.js",["58","59","60","61"],"import React from 'react';\nimport axios from 'axios';\n// Takes in type of api call and value to search, returns JSON data\nconst Fetch = async (type, value) => {\n    // const res = await fetch(`https://xchain.io/api/${type}/${value}`)\n    // const json = await res.json()\n    // return json\n\n    const url = \"https://public.coindaddy.io:4001/api/\"\n    const headers = {'content-type': 'application/json'}\n    // const auth = HTTPBasicAuth('rpc', \"1234\")\n\n    if(type == \"asset\") {\n        console.log(\"asset POST\")\n        const response = await axios.post(url, {\n            \n                \"method\": \"get_asset_info\",\n                \"params\": {\n                    // # \"filter\": \"asset_name\", \"op\": \"==\", \"value\": asset\n                    // # \"asset\": asset\n                    \"assets\": [value]\n                },\n                \"jsonrpc\": \"2.0\",\n                \"id\": 0\n            },\n            { auth: {\n                username: \"rpc\",\n                password: \"1234\"\n            } }\n        )\n        console.log(response.data.result)\n        const result = response.data.result\n        return result[0]\n\n    } else if(type == \"balances\") {\n        console.log(\"balance POST\")\n        const response = await axios.post(url, {\n            \n                \"method\": \"get_balances\",\n                \"params\": {\n                    \"filters\": \n                        [\n                            {\"field\": \"address\", \"op\": \"==\", \"value\": value},\n                            {\"field\": \"quantity\", \"op\": \">\", \"value\": \"0\"}\n                        ],\n                    \"filterop\": \"AND\"\n                },\n                \"jsonrpc\": \"2.0\",\n                \"id\": 0\n            },\n            { auth: {\n                username: \"rpc\",\n                password: \"1234\"\n            } }\n        )\n        console.log(response.data.result)\n        const result = response.data.result\n        return result\n    } else {\n        console.log(\"not found\")\n        return null\n    }\n}\n\nexport default Fetch","/Users/synesis/Documents/Developer/Counterview/src/components/Gallery.js",[],"/Users/synesis/Documents/Developer/Counterview/src/components/CreateCard.js",["62","63","64","65","66","67"],"import React, { useState, useEffect } from \"react\"\nimport Fetch from \"./Fetch\"\nimport LazyImage from \"./LazyImage\"\n\nimport placeholder from \"../data/placeholder.jpg\"\n\n// Takes in image src, asset name and \n// quantity to return an image card for gallery view\n// TODO: Create alternative display for MP4\nfunction CreateCard(props) {\n    const [ toggle, setToggle ] = useState({\n        info: false\n    })\n    const [ info, setInfo ] = useState({\n        supply: 0,\n        est_value: \"$0\",\n        dispenser_price: \"0 BTC\"\n    })\n    const [ callInfo , setCallInfo ] = useState(false)\n\n    // Creates class names for card\n    const className = `image-card ${props.series}`\n\n    // Sets state for info toggle\n    function changeToggle() {\n        setToggle(prevState => ({\n            info: !prevState.info\n        }))\n    }\n\n    // // Runs on call info so not to continuously call\n    // useEffect(() => {\n    //     // Updates asset and market info on toggle\n    //     const updateData = async () => {\n    //         // Update info\n    //         const asset_info = await Fetch(\"asset\", props.asset)\n    //         let val_usd = \"Priceless\"\n    //         if(asset_info[\"estimated_value\"][\"usd\"] > 0.0) {\n    //             val_usd = parseFloat(asset_info[\"estimated_value\"][\"usd\"]).toFixed(4)\n    //         }\n\n    //         // Update dispenser\n    //         const asset_disp = await Fetch(\"dispensers\", props.asset)\n    //         let dispenser_btc = \"\"\n    //         if(asset_disp[\"data\"].length > 0) {\n    //             dispenser_btc = ((parseFloat(asset_disp[\"data\"][0][\"satoshirate\"]).toFixed(4)).toString() + \"BTC\")\n    //         } else {\n    //             dispenser_btc = \"Priceless\"\n    //         }\n\n    //         setInfo(prevState => ({\n    //             supply: asset_info[\"supply\"],\n    //             est_value: val_usd.toString(),\n    //             dispenser_price: dispenser_btc.toString()\n    //         }))\n    //     }\n    //     updateData()\n    // }, [callInfo])\n\n    useState(() => {\n        // console.log(info)\n    }, [info])\n\n\n    // Info component\n    const cardInfo = (\n        <span\n            className=\"card-info\"\n        >\n            <span className=\"fill\"></span>\n            <p>INFO</p>\n            <p><a href={`https://xchain.io/asset/${props.asset}`} target=\"_blank\">XCHAIN</a></p>\n            <p>SUPPLY: {props.quantity}</p>\n            <p>EST VAL: {info.est_value}</p>\n            <p>LAST DISP: {info.dispenser_price}</p>\n        </span>\n    )\n\n    return (\n        <span \n            className={className}\n            onClick={() => {\n                \n            }}\n        >\n            {toggle.info ? cardInfo : null}\n            {/* <img \n                alt={props.asset}\n                src={props.src}\n            /> */}\n            <LazyImage src={props.src} placeholder={placeholder} />\n            <p \n                className=\"asset-info\"\n                onClick={() => {\n                    changeToggle()\n                }}\n            >\n                <span>{props.asset}</span>\n                <span>{props.quantity}</span>\n            </p>\n        </span>\n    )\n}\n\nexport default CreateCard","/Users/synesis/Documents/Developer/Counterview/src/components/FindSrc.js",[],"/Users/synesis/Documents/Developer/Counterview/src/components/AutoComplete.js",["68"],"// Made by Liam\nimport { useState, useEffect } from \"react\";\nimport FakeData from \"../data/fakedata.json\";\nimport OGPepe from \"../data/og_pepe.json\";\n\nimport { Dropdown, FormControl, InputGroup, Badge } from \"react-bootstrap\";\n\nexport default function AutoComplete(props) {\n  const [autoComplete, setAutoComplete] = useState([]);\n  const [showComplete, setShowComplete] = useState(false);\n  const [addresses, setAddresses] = useState([]);\n\n  const { input, setInput, search } = props;\n\n  //   get asset names\n  const assets = [\n    ...FakeData.map((obj) => {\n      return { series: obj.series, asset: obj.asset };\n    }),\n    ...OGPepe.map((obj) => {\n      return { series: obj.series, asset: obj.asset };\n    }),\n  ];\n\n  const handleSearch = async (value) => {\n    // If text input is not length of address then search for asset\n\n    if (value.length < 33 && !parseInt(input[0])) {\n      // setResult(Fetch(\"asset\", searchValue))\n\n      setShowComplete(false);\n      setAutoComplete([]);\n      search(input);\n    }\n    if (parseInt(input[0]) === 1 && input.length >= 25 && input.length <= 35) {\n      setAddresses([...new Set([value, ...addresses])]);\n      const JSONAddresses = JSON.stringify(addresses);\n\n      localStorage.setItem(\"addresses\", JSONAddresses);\n      search(input);\n      // Search an address\n      // setResult(Fetch(\"address\", searchValue))\n    }\n  };\n\n  function handleInput(input) {\n    setShowComplete(false);\n    setAutoComplete([]);\n    // check if it's an asset\n    if (input.length > 0 && !parseInt(input[0])) {\n      setAutoComplete(\n        assets.filter((asset) => asset.asset.includes(input.toUpperCase()))\n      );\n      if (autoComplete.length > 0) setShowComplete(true);\n    }\n    // if it starts with 1, it's probably an address\n    if (parseInt(input[0]) === 1 && addresses.length >= 1) {\n      setShowComplete(true);\n    }\n    setInput(input);\n  }\n\n  //   get addresses from localstorage\n  useEffect(() => {\n    try {\n      const lsAdresses = JSON.parse(localStorage.getItem(\"addresses\"));\n\n      if (lsAdresses !== null) setAddresses(lsAdresses);\n    } catch (error) {\n      console.log(\"couldn't parse addresses\");\n    }\n  }, []);\n\n  return (\n    <InputGroup>\n      {showComplete && (\n        <Dropdown.Menu show as='div' className='w-100'>\n          {autoComplete.map(\n            (asset, i) =>\n              i < 10 && (\n                <Dropdown.Item\n                  className='w-100'\n                  id={asset.asset}\n                  onClick={(e) => {\n                    console.log(\"THIS\")\n                    console.log(e.target.id);\n                    setInput(e.target.id);\n                    // handleSearch(e.target.id);\n                    setShowComplete(false);\n                  }}\n                  key={i}>\n                  <span align='start'>{asset.asset}</span>\n                  <Badge\n                    bg='light'\n                    variant='light'\n                    style={{ float: \"right\", color: \"#212121\" }}\n                    pill\n                    className='ml-auto'>\n                    {asset.series && asset.series}\n                  </Badge>\n                </Dropdown.Item>\n              )\n          )}\n          {addresses.length >= 1 && (\n            <Dropdown.Header>Address History</Dropdown.Header>\n          )}\n          {addresses.length >= 1 &&\n            addresses.map(\n              (address, i) =>\n                i < 5 && (\n                  <Dropdown.Item\n                    className='text-truncate'\n                    style={{ textOverflow: \"ellipsis\" }}\n                    as='div'\n                    onClick={(e) => {\n                        console.log(e.target.innerText);\n                        setInput(e.target.innerText);\n                        // handleSearch(e.target.innerText);\n                        setShowComplete(false);\n                    }}\n                    variant='secondary'\n                    key={i}>\n                    {address}\n                  </Dropdown.Item>\n                )\n            )}\n        </Dropdown.Menu>\n      )}\n      <FormControl\n        type='search'\n        value={input}\n        placeholder={\"Search asset or address\"}\n        className='mr-2 search-field'\n        aria-label='Search'\n        onChange={(e) => {\n            handleInput(e.target.value);\n        }}\n      />\n    </InputGroup>\n  );\n}","/Users/synesis/Documents/Developer/Counterview/src/components/LazyImage.js",["69","70"],"import React, { Component } from \"react\"\n\nclass LazyImage extends React.Component {\n    state = { src: null };\n\n    componentDidMount() {\n    const { src } = this.props;\n\n    const imageLoader = new Image();\n    imageLoader.src = src;\n\n    imageLoader.onload = () => {\n        this.setState({ src });\n    };\n    }\n\n    render() {\n    return <img src={this.state.src || this.props.placeholder} />;\n    }\n}\n\nexport default LazyImage",{"ruleId":"71","severity":1,"message":"72","line":2,"column":38,"nodeType":"73","messageId":"74","endLine":2,"endColumn":48},{"ruleId":"71","severity":1,"message":"75","line":3,"column":8,"nodeType":"73","messageId":"74","endLine":3,"endColumn":14},{"ruleId":"71","severity":1,"message":"76","line":4,"column":8,"nodeType":"73","messageId":"74","endLine":4,"endColumn":15},{"ruleId":"71","severity":1,"message":"77","line":16,"column":13,"nodeType":"73","messageId":"74","endLine":16,"endColumn":19},{"ruleId":"71","severity":1,"message":"78","line":28,"column":14,"nodeType":"73","messageId":"74","endLine":28,"endColumn":26},{"ruleId":"71","severity":1,"message":"79","line":87,"column":14,"nodeType":"73","messageId":"74","endLine":87,"endColumn":28},{"ruleId":"71","severity":1,"message":"80","line":11,"column":14,"nodeType":"73","messageId":"74","endLine":11,"endColumn":25},{"ruleId":"81","severity":1,"message":"82","line":45,"column":8,"nodeType":"83","endLine":45,"endColumn":16,"suggestions":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"71","severity":1,"message":"89","line":1,"column":8,"nodeType":"73","messageId":"74","endLine":1,"endColumn":13},{"ruleId":"71","severity":1,"message":"90","line":10,"column":11,"nodeType":"73","messageId":"74","endLine":10,"endColumn":18},{"ruleId":"91","severity":1,"message":"92","line":13,"column":13,"nodeType":"93","messageId":"94","endLine":13,"endColumn":15},{"ruleId":"91","severity":1,"message":"92","line":35,"column":20,"nodeType":"93","messageId":"94","endLine":35,"endColumn":22},{"ruleId":"71","severity":1,"message":"95","line":1,"column":27,"nodeType":"73","messageId":"74","endLine":1,"endColumn":36},{"ruleId":"71","severity":1,"message":"96","line":2,"column":8,"nodeType":"73","messageId":"74","endLine":2,"endColumn":13},{"ruleId":"71","severity":1,"message":"97","line":14,"column":19,"nodeType":"73","messageId":"74","endLine":14,"endColumn":26},{"ruleId":"71","severity":1,"message":"98","line":19,"column":13,"nodeType":"73","messageId":"74","endLine":19,"endColumn":21},{"ruleId":"71","severity":1,"message":"99","line":19,"column":24,"nodeType":"73","messageId":"74","endLine":19,"endColumn":35},{"ruleId":"100","severity":1,"message":"101","line":72,"column":16,"nodeType":"102","messageId":"103","endLine":72,"endColumn":83,"fix":"104"},{"ruleId":"71","severity":1,"message":"105","line":25,"column":9,"nodeType":"73","messageId":"74","endLine":25,"endColumn":21},{"ruleId":"71","severity":1,"message":"106","line":1,"column":17,"nodeType":"73","messageId":"74","endLine":1,"endColumn":26},{"ruleId":"107","severity":1,"message":"108","line":18,"column":12,"nodeType":"102","endLine":18,"endColumn":66},"no-unused-vars","'useReducer' is defined but never used.","Identifier","unusedVar","'NavBar' is defined but never used.","'Gallery' is defined but never used.","'wallet' is assigned a value but never used.","'onDataChange' is defined but never used.","'onFilterChange' is defined but never used.","'handleInput' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["109"],"no-native-reassign",["110"],"no-negated-in-lhs",["111"],"'React' is defined but never used.","'headers' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useEffect' is defined but never used.","'Fetch' is defined but never used.","'setInfo' is assigned a value but never used.","'callInfo' is assigned a value but never used.","'setCallInfo' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"112","text":"113"},"'handleSearch' is assigned a value but never used.","'Component' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",{"desc":"114","fix":"115"},"no-global-assign","no-unsafe-negation",[2313,2313]," rel=\"noreferrer\"","Update the dependencies array to be: [props, result]",{"range":"116","text":"117"},[1436,1444],"[props, result]"]
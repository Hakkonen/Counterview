[{"/home/liam/Projects/JavaScript/Counterview/src/index.js":"1","/home/liam/Projects/JavaScript/Counterview/src/reportWebVitals.js":"2","/home/liam/Projects/JavaScript/Counterview/src/App.js":"3","/home/liam/Projects/JavaScript/Counterview/src/components/Gallery.js":"4","/home/liam/Projects/JavaScript/Counterview/src/components/NavBar.js":"5","/home/liam/Projects/JavaScript/Counterview/src/components/FindSrc.js":"6","/home/liam/Projects/JavaScript/Counterview/src/components/CreateCard.js":"7","/home/liam/Projects/JavaScript/Counterview/src/components/Fetch.js":"8","/home/liam/Projects/JavaScript/Counterview/src/components/AutoComplete.js":"9"},{"size":547,"mtime":1634279048006,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1634279048006,"results":"12","hashOfConfig":"11"},{"size":3458,"mtime":1634280228968,"results":"13","hashOfConfig":"11"},{"size":174,"mtime":1634280077188,"results":"14","hashOfConfig":"11"},{"size":2780,"mtime":1634280489812,"results":"15","hashOfConfig":"11"},{"size":742,"mtime":1634280228968,"results":"16","hashOfConfig":"11"},{"size":2914,"mtime":1634280228968,"results":"17","hashOfConfig":"11"},{"size":250,"mtime":1634280228968,"results":"18","hashOfConfig":"11"},{"size":4293,"mtime":1634282714624,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"7hejvv",{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/liam/Projects/JavaScript/Counterview/src/index.js",[],["41","42"],"/home/liam/Projects/JavaScript/Counterview/src/reportWebVitals.js",[],"/home/liam/Projects/JavaScript/Counterview/src/App.js",[],"/home/liam/Projects/JavaScript/Counterview/src/components/Gallery.js",[],"/home/liam/Projects/JavaScript/Counterview/src/components/NavBar.js",["43","44","45"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Container,\n  Nav,\n  Navbar,\n  Form,\n  FormControl,\n  Button,\n} from \"react-bootstrap\";\nimport Fetch from \"./Fetch\";\nimport AutoComplete from \"./AutoComplete\";\nfunction NavBar(props) {\n  const [input, setInput] = useState(\"\"); // Search input box value\n  const [result, setResult] = useState(\"\"); // Fetch results\n\n  // 1. Handles search input\n  function handleInput(input) {\n    setInput(input);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n  }\n\n  // 2. Receives search input and filters length to determine if asset or address then fetches API data\n  const search = async (value) => {\n    // If text input is not length of address then search for asset\n    if (value.length < 33) {\n      const res = await Fetch(\"asset\", value);\n      setResult(res);\n    } else {\n      // Search an address\n      const res = await Fetch(\"balances\", value);\n      setResult(res);\n    }\n  };\n\n  // 3. Updates wallet values when async is complete\n  useEffect(() => {\n    // Passes JSON data to parent\n    props.onDataChange(result);\n  }, [result]);\n\n  return (\n    <Navbar collapseOnSelect className='navBar' expand='lg' variant='dark'>\n      <Container>\n        <Navbar.Brand href='' className='logo'>\n          Counterview.club\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls='responsive-navbar-nav' />\n        <Navbar.Collapse id='responsive-navbar-nav'>\n          <Nav className='me-auto'>\n            <Nav.Link\n              className={\n                props.pepeFilter.original ? \"selected-filter\" : \"nav-link\"\n              }\n              onClick={() => {\n                props.onFilterChange(\"original\");\n              }}>\n              OG Peps\n            </Nav.Link>\n            <Nav.Link\n              className={props.pepeFilter.fake ? \"selected-filter\" : \"nav-link\"}\n              onClick={() => {\n                props.onFilterChange(\"fake\");\n              }}>\n              Fakes\n            </Nav.Link>\n            <Nav.Link href='https://fapep.github.io/FABRIQUE/' target='_blank'>\n              About\n            </Nav.Link>\n          </Nav>\n          <AutoComplete setInput={setInput} search={search} input={input} />\n          <Form\n            id='search-input'\n            className='d-flex'\n            onClick={(e) => {\n              // console.log(e.target)\n            }}\n            onSubmit={(e) => {\n              handleSubmit(e);\n            }}>\n            <Button\n              variant='outline-success'\n              className='search-button'\n              onClick={() => {\n                search(input);\n              }}>\n              Search\n            </Button>\n          </Form>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  );\n}\n\nexport default NavBar;\n","/home/liam/Projects/JavaScript/Counterview/src/components/FindSrc.js",[],"/home/liam/Projects/JavaScript/Counterview/src/components/CreateCard.js",["46","47","48"],"import React, { useState, useEffect } from \"react\"\nimport Fetch from \"./Fetch\"\n\n// Takes in image src, asset name and \n// quantity to return an image card for gallery view\n// TODO: Create alternative display for MP4\nfunction CreateCard(props) {\n    const [ toggle, setToggle ] = useState({\n        info: false\n    })\n    const [ info, setInfo ] = useState({\n        supply: 0,\n        est_value: \"$0\",\n        dispenser_price: \"0 BTC\"\n    })\n    const [ callInfo , setCallInfo ] = useState(false)\n\n    // Creates class names for card\n    const className = `image-card ${props.series}`\n\n    // Sets state for info toggle\n    function changeToggle() {\n        setToggle(prevState => ({\n            info: !prevState.info\n        }))\n    }\n\n    // Runs on call info so not to continuously call\n    useEffect(() => {\n        // Updates asset and market info on toggle\n        const updateData = async () => {\n            // Update info\n            const asset_info = await Fetch(\"asset\", props.asset)\n            let val_usd = \"Priceless\"\n            if(asset_info[\"estimated_value\"][\"usd\"] > 0.0) {\n                val_usd = parseFloat(asset_info[\"estimated_value\"][\"usd\"]).toFixed(4)\n            }\n\n            // Update dispenser\n            const asset_disp = await Fetch(\"dispensers\", props.asset)\n            let dispenser_btc = \"\"\n            if(asset_disp[\"data\"].length > 0) {\n                dispenser_btc = ((parseFloat(asset_disp[\"data\"][0][\"satoshirate\"]).toFixed(4)).toString() + \"BTC\")\n            } else {\n                dispenser_btc = \"Priceless\"\n            }\n\n            setInfo(prevState => ({\n                supply: asset_info[\"supply\"],\n                est_value: val_usd.toString(),\n                dispenser_price: dispenser_btc.toString()\n            }))\n        }\n        updateData()\n    }, [callInfo])\n\n    useState(() => {\n        // console.log(info)\n    }, [info])\n\n\n    // Info component\n    const cardInfo = (\n        <span\n            className=\"card-info\"\n        >\n            <span className=\"fill\"></span>\n            <p>INFO</p>\n            <p><a href={`https://xchain.io/asset/${props.asset}`} target=\"_blank\">XCHAIN</a></p>\n            <p>SUPPLY: {info.supply}</p>\n            <p>EST VAL: {info.est_value}</p>\n            <p>LAST DISP: {info.dispenser_price}</p>\n        </span>\n    )\n\n    return (\n        <span \n            className={className}\n            onClick={() => {\n                \n            }}\n        >\n            {toggle.info ? cardInfo : null}\n            <img \n                alt={props.asset}\n                src={props.src}\n            />\n            <p \n                className=\"asset-info\"\n                onClick={() => {\n                    changeToggle()\n                }}\n            >\n                <span>{props.asset}</span>\n                <span>{props.quantity}</span>\n            </p>\n        </span>\n    )\n}\n\nexport default CreateCard","/home/liam/Projects/JavaScript/Counterview/src/components/Fetch.js",[],"/home/liam/Projects/JavaScript/Counterview/src/components/AutoComplete.js",[],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":7,"column":3,"nodeType":"55","messageId":"56","endLine":7,"endColumn":14},{"ruleId":"53","severity":1,"message":"57","line":17,"column":12,"nodeType":"55","messageId":"56","endLine":17,"endColumn":23},{"ruleId":"58","severity":1,"message":"59","line":42,"column":6,"nodeType":"60","endLine":42,"endColumn":14,"suggestions":"61"},{"ruleId":"53","severity":1,"message":"62","line":16,"column":24,"nodeType":"55","messageId":"56","endLine":16,"endColumn":35},{"ruleId":"58","severity":1,"message":"63","line":55,"column":8,"nodeType":"60","endLine":55,"endColumn":18,"suggestions":"64"},{"ruleId":"65","severity":1,"message":"66","line":69,"column":16,"nodeType":"67","messageId":"68","endLine":69,"endColumn":83,"fix":"69"},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"no-unused-vars","'FormControl' is defined but never used.","Identifier","unusedVar","'handleInput' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["72"],"'setCallInfo' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.asset'. Either include it or remove the dependency array.",["73"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"74","text":"75"},"no-global-assign","no-unsafe-negation",{"desc":"76","fix":"77"},{"desc":"78","fix":"79"},[2148,2148]," rel=\"noreferrer\"","Update the dependencies array to be: [props, result]",{"range":"80","text":"81"},"Update the dependencies array to be: [callInfo, props.asset]",{"range":"82","text":"83"},[1096,1104],"[props, result]",[1817,1827],"[callInfo, props.asset]"]